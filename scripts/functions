execute_install_from_archive()
{
  local VENDOR="$1"
  local DESTDIR="$2"
  local SRCFILE="$3"
  local FILTER="http"
  if [ ! -z "$4" ]; then
   local FILTER="$4"
  fi
  local XZIP=$(mktemp -u XXXXXXXXXXXXXXXXX)

  grep -v "^#" < $SRCFILE |grep -E -i "$FILTER" | \
  while read xchk xurl xmirrors; do
    case "$xurl" in
      *.zip|*family=*)
        XTARGET="./$XZIP.zip"
        ;;
      *.tar.gz)
            XTARGET="./$XZIP.tar.gz"
        ;;
      *.tar.bz2)
            XTARGET="./$XZIP.tar.bz2"
        ;;
      *.otf|*.ttf|*.OTF|*.TTF)
            XTARGET="./$(basename $xurl)"
        ;;
    esac
    echo "Downloading $xurl -> $XTARGET"
    cd $XTMP/ && $XGET "$XTARGET" "$xurl" $xmirrors
    if [ "$?" -gt 0 ]; then
        echo "download failed ... next."
    else
        if [ "$xchk" != "0" ]; then
            XHASH="$XTARGET.hash"
            cd $XTMP/ && echo "$xchk  ./$(basename $XTARGET)" > "$XHASH"
            cd $XTMP/ && shasum -c "$XHASH"
            if [ "$?" -gt 0 ]; then
                            echo "hash verification failed ... exiting."
                            exit 1
                        fi
        else
            cd $XTMP/ && shasum -a 1 "$XTARGET"
        fi
        case "$XTARGET" in
          *.zip)
            cd $XTMP/ && unzip -o -j "$XTARGET"
                if [ "$?" -gt 0 ]; then
                  echo "extract failed ... exiting."
                  hexdump -C < "$XTARGET" | head -10
                  exit 1
                fi
            ;;
          *.tar|*.tar.gz|*.tar.bz2|*.tar.xz)
            cd $XTMP/ && tar -xvf "$XTARGET" -C $XTMP
            ;;
          *.cab|*.CAB)
            cd $XTMP/ && cabextract -L -d "$XTMP" "$XTARGET"
            ;;
        esac
        if [ "$DOZIP" -gt 0 ]; then
            mkdir -p "$DESTDIR"
        else
            mkdir -p "$DESTDIR/$VENDOR"
        fi
        find $XTMP/ -iname "*.?tf" -type f | sort | \
        while IFS= read -r xline ; do
            xfile="$xline"
            case "$xfile" in
                *.TTF)
                    xfile=$(basename "$xfile" ".TTF").ttf
                    ;;
                *.OTF)
                    xfile=$(basename "$xfile" ".OTF").otf
                    ;;
                *)
                    xfile=$(basename "$xfile")
                    ;;
            esac
            xfile=$(tr ' ' '-' <<< "$xfile")
            if [ "$DOZIP" -gt 0 ]; then
                xvendor=$(tr -d -c '[[:alnum:]]' <<< "$VENDOR")
                cd $XTMP/ && (mv -v "$xline" "$xfile" ; zip -9 "$DESTDIR/$xvendor.zip" "$xfile")
            else
                cd $XTMP/ && cp -v "$xline" "$DESTDIR/$VENDOR/$xfile"
            fi
        done
        find $XTMP/ -type f -delete
    fi
  done
}

list_commands ()
{
  usage
  for x in $XDIR/scripts/*.sh $XDIR/data/*.urls; do
    case "$x" in
        *.sh)
            b=$(basename $x .sh)
            echo "install-fonts $b [... options ...]"
            ;;
        *.urls)
            b=$(basename $x .urls)
            echo "install-fonts $b [... options ...]"
            ;;
    esac
  done | sort
  echo -e "\n$SEPR"
}

make_filter_and_dest()
{
  # there is only one possible option: the destdir
  # --sys(tem) -sys(tem)
  # --local -local
  # --user -user
  # --prefix -prefix <path>
  # --filter -filter <rx>
  DEST=
  FILTER=
  DOLIST=0
  DOZIP=0
  while [ ! -z "$1" ]; do
      case "$1" in
        --h*|-h*|h*)
          cat <<EOT
      Possible options:

      --system ... install to system directory "$FSYSDIR"
      --local ... install to system directory "$FLCLDIR"
      --user ... install to system directory "$FUSRDIR"
      --prefix <path> ... install to given directory prefix
      --filter <rx> ... only install resources matching
      --list ... list possible choices
EOT
            exit 0
          ;;
        --sys*|-sys*)
            DEST="$FSYSDIR"
          ;;
        --local*|-local*)
            DEST="$FLCLDIR"
          ;;
        --user*|-user*)
            DEST="$FUSRDIR"
          ;;
        --pref*|-pref*)
            DEST="$2"
            shift
          ;;
        --filter*|-filter*)
            FILTER="$2"
            shift
          ;;
        --no-vend*|-no-vend*)
            VENDOR=.
          ;;
        --list*|-list*)
            DOLIST=1
          ;;
        --zip*|-zip*)
            DOZIP=1
          ;;
        --url*|-url*)
            XURI="$2"
            shift
          ;;
        --repo*|-repo*)
            XREPO="$2"
            shift
          ;;
        --fam*|-fam*)
            XFAMILY="$2"
            shift
          ;;
        --query*|-query*)
            XQUERY="$2"
            shift
          ;;
        *) echo "unknown option /$1/ ... exiting."
          exit 1
          ;;
      esac
      shift
  done
}

execute_install_from_archive_list()
{
  VENDOR="$1"
  shift
  LIST="$1"
  shift
  make_filter_and_dest "$@"
  if [ "$DOLIST" -gt 0 ]; then
    if [ -z "$FILTER" ]; then
      cat "$LIST"|grep -v '^#'
    else
      cat "$LIST"|grep -v '^#' |grep -E -i "$FILTER"
    fi
    exit 0
  fi
  execute_install_from_archive "$VENDOR" "$DEST" "$LIST" $FILTER
}

execute_command ()
{
  C="$1"
  shift
  if [ -f "$XDIR/scripts/$C.sh" ]; then
      source "$XDIR/scripts/$C.sh"
      execute_install "$@"
  elif [ -f "$XDIR/data/$C.urls" ]; then
    execute_install_from_archive_list "$C" "$XDIR/data/$C.urls" "$@"
  else
    echo "provider /$C/ not found ... exiting."
    exit 1
  fi
}